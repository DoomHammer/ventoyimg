# This is a basic workflow to help you get started with Actions

name: Build Images

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          curl -s https://api.github.com/repos/ventoy/Ventoy/releases/latest | grep browser_download_url.*linux.tar.gz | cut -d : -f 2,3 | tr -d \" | wget -qi -
          df -h
          tar -xf ventoy-*
          rm *.gz
          cd ventoy-*
          dd if=/dev/zero of=/tmp/256MBwLiveCD.img bs=512 count=494080
          losetup
          sudo losetup -fP /tmp/256MBwLiveCD.img
          sudo yes | sudo ./Ventoy2Disk.sh -I /dev/loop3
          cd ..
          sudo mkdosfs -F 32 /dev/loop3p1 -n VENTOY
          sudo mkdir /mnt/loop
          sudo mount /dev/loop3p1 /mnt/loop
          sudo chmod 777 /mnt/loop
          sudo mkdir /mnt/loop/ventoy
          sudo cp ventoy.json /mnt/loop/ventoy
          sudo umount /mnt/loop
          sudo losetup -d /dev/loop3
          cp /tmp/256MBwLiveCD.img /tmp/256MBempty.img
          sudo losetup -fP /tmp/256MBwLiveCD.img
          sudo mount /dev/loop3p1 /mnt/loop
          cd /mnt/loop
          curl -s https://api.github.com/repos/ventoy/Ventoy/releases/latest | tee | grep browser_download_url.*iso | tee | cut -d : -f 2,3 | tee | tr -d \" | tee | sudo wget -qi -
          sudo sync
          ls
          cd ..
          sudo umount /mnt/loop
          sudo losetup -d /dev/loop3
          cd /tmp
          zip -r 256MBempty.img.zip 256MBempty.img
          rm /tmp/256MBempty.img
          ls /tmp
          df -h
          echo 256 megabyte complete
          cd $GITHUB_WORKSPACE
          cd ventoy-*
          dd if=/dev/zero of=/tmp/0512MBempty.img bs=512 count=988160
          sudo losetup -fP /tmp/0512MBempty.img
          sudo yes | sudo ./Ventoy2Disk.sh -I /dev/loop3
          cd ..
          sudo mkdosfs -F 32 /dev/loop3p1 -n VENTOY
          sudo mount /dev/loop3p1 /mnt/loop
          sudo chmod 777 /mnt/loop
          sudo mkdir /mnt/loop/ventoy
          sudo cp ventoy.json /mnt/loop/ventoy
          sudo umount /mnt/loop
          sudo losetup -d /dev/loop3
          cd /tmp
          zip -r 0512MBempty.img.zip 0512MBempty.img
          echo 512 megabyte complete
          cd $GITHUB_WORKSPACE
          cd ventoy-*
          dd if=/dev/zero of=/tmp/1024MBempty.img bs=512 count=1976320
          sudo losetup -fP /tmp/1024MBempty.img
          sudo yes | sudo ./Ventoy2Disk.sh -I /dev/loop3
          cd ..
          sudo mkdosfs -F 32 /dev/loop3p1 -n VENTOY
          sudo mount /dev/loop3p1 /mnt/loop
          sudo chmod 777 /mnt/loop
          sudo mkdir /mnt/loop/ventoy
          sudo cp ventoy.json /mnt/loop/ventoy
          sudo umount /mnt/loop
          sudo losetup -d /dev/loop3
          cd /tmp
          zip -r 1024MBempty.img.zip 1024MBempty.img
      - name: Create release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Build ${{ github.run_number }}
      - name: Upload 0256MBwLiveCD to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: /tmp/256MBwLiveCD.img
          asset_name: 0256MBwLiveCD_build${{ github.run_number }}.img
          asset_content_type: application/octet-stream
      - name: Upload 0256MBempty to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: /tmp/256MBempty.img.zip
          asset_name: 0256MBempty_build${{ github.run_number }}.img.zip
          asset_content_type: application/octet-stream
      - name: Upload 0512MBempty to release
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create-new-release.outputs.upload_url }}
            asset_path: /tmp/0512MBempty.img.zip
            asset_name: 0512MBempty_build${{ github.run_number }}.img.zip
            asset_content_type: application/octet-stream
      - name: Upload 1024MBempty to release
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ steps.create-new-release.outputs.upload_url }}
            asset_path: /tmp/1024MBempty.img
            asset_name: 1024MBempty${{ github.run_number }}.img
            asset_content_type: application/octet-stream